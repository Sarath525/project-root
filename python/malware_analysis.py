import requests
import json
import os
import time

# API keys (replace with your actual API keys)
VIRUSTOTAL_API_KEY = 'a05026e4699477940a0d99c983748f10f4fc27a942618be5225e633133551d94'
ABUSEIPDB_API_KEY = '32c315cc6f56ade77ba7d5c535b2f3e11c39dc1ee3b927fe23fc2ea5e24db1b87f1a1f95ded100e7'

# VirusTotal API endpoints
VT_URL_SCAN_ENDPOINT = 'https://www.virustotal.com/api/v3/urls'
VT_URL_REPORT_ENDPOINT = 'https://www.virustotal.com/api/v3/analyses'
VT_FILE_SCAN_ENDPOINT = 'https://www.virustotal.com/api/v3/files'

# AbuseIPDB API endpoint
ABUSEIPDB_CHECK_ENDPOINT = 'https://api.abuseipdb.com/api/v2/check'

def scan_url_vt(url):
    headers = {
        'x-apikey': VIRUSTOTAL_API_KEY
    }
    data = {
        'url': url
    }
    response = requests.post(VT_URL_SCAN_ENDPOINT, headers=headers, data=data)
    if response.status_code == 200:
        analysis_id = response.json().get('data').get('id')
        return analysis_id
    else:
        raise Exception(f"Error scanning URL: {response.status_code} {response.text}")

def get_url_report_vt(analysis_id):
    headers = {
        'x-apikey': VIRUSTOTAL_API_KEY
    }
    while True:
        response = requests.get(f"{VT_URL_REPORT_ENDPOINT}/{analysis_id}", headers=headers)
        if response.status_code == 200:
            data = response.json()
            if data['data']['attributes']['status'] == 'completed':
                return data
            else:
                time.sleep(10)  # wait for 10 seconds before checking again
        else:
            raise Exception(f"Error retrieving URL report: {response.status_code} {response.text}")

def scan_file_vt(file_path):
    headers = {
        'x-apikey': VIRUSTOTAL_API_KEY
    }
    files = {
        'file': (os.path.basename(file_path), open(file_path, 'rb'))
    }
    response = requests.post(VT_FILE_SCAN_ENDPOINT, headers=headers, files=files)
    if response.status_code == 200:
        analysis_id = response.json().get('data').get('id')
        return analysis_id
    else:
        raise Exception(f"Error scanning file: {response.status_code} {response.text}")

def check_ip_abuseipdb(ip_address):
    headers = {
        'Key': ABUSEIPDB_API_KEY,
        'Accept': 'application/json'
    }
    params = {
        'ipAddress': ip_address,
        'maxAgeInDays': 90
    }
    response = requests.get(ABUSEIPDB_CHECK_ENDPOINT, headers=headers, params=params)
    if response.status_code == 200:
        return response.json()
    else:
        raise Exception(f"Error checking IP: {response.status_code} {response.text}")
